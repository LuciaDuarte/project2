<div class="global-body-margin-top">

<div class='title-map-container'>
<h4 class="map-title">Find people from the community to support you</h4>
</div>


<div class="filtersSection">  
        <div class="map-filters">
            <label>
            Food
            <input type="radio" value="food" onclick="setFilterNeedType(this)"  name="filterNeedType"  class="radio-button radio-button-food" >
            </label>

            <label>
            Healthcare<input type="radio" value="healthcare" onclick="setFilterNeedType(this)" name="filterNeedType"  class="radio-button radio-button-healthcare" >
            </label>

            <label>
             Hosting <input type="radio" value="hosting" onclick="setFilterNeedType(this)" name="filterNeedType"  class="radio-button radio-button-hosting" >
            </label>

            <label>
            Administrative Help <input type="radio" onclick="setFilterNeedType(this)" value="administrative" name="filterNeedType"  class="radio-button radio-button-administrative" >
            </label>

            <label>
            All  <input type="radio" value="all" onclick="setFilterNeedType(this)" name="filterNeedType" class="radio-button radio-button-all" >
            </label>
        </div>
      </div>
</div>

<div class="container-fluid global-map-group">

    <div class="profile-suggestions" >
      <div>
        <p class='label-preview'> Members nearby
        <div>
          {{#each helpersUsersFromDB}}
          <div class="snippet-preview">
              <div>
                  <img class="preview-image" src="{{photo}}"> 
              </div>
              <div>
                  <h5 class="h5-snippet"> {{userName}}</h5>
                  <p class="p-snippet"> Provide help for: {{serviceType.name}}</p>  
                  <a href="/n-profile/{{_id}}" class="snippet-see-profile"> See profile</a>
              </div>
          </div>  
          {{/each}}
        </div>
      </div> 
    </div>


{{!-- The map --}}
<div style="width:1100px" class="helper-map-page-bloc" id="needyMap"></div>

</div>


<input type="hidden" id="userInput" value="{{user}}">
<input type="hidden" id="allMarkers" value="{{markers}}">




<script
      src="https://maps.googleapis.com/maps/api/js?key={{gmapKey}}&callback=initMap&libraries=&v=weekly"
      defer
    ></script>  
<script>
 

//Needy Map Initiation
let filter;
let needyMap;
let geocoder;
let googleMarkers = [];

//const infowindow = new google.maps.InfoWindow();

function initMap() {
  geocoder = new google.maps.Geocoder();
   let currentUser = JSON.parse(document.getElementById("userInput").value);

  needyMap = new google.maps.Map(document.getElementById('needyMap'), {
    zoom: 17,
    center: {lat: currentUser.geocoding.lat, lng: currentUser.geocoding.lng}
  })
}


function showMarkers() {  
   let markers = JSON.parse(document.getElementById("allMarkers").value);
   console.log("markers", markers);
   console.log("filter", filter);

   if (filter && filter !== "all") {
     clearMarkers();
     markers = markers.filter((marker) => {
       return marker.needType.name === filter; 
     });
   }

   markers.forEach((marker) =>{
     setMarker({ lat: marker.geocoding.lat, lng: marker.geocoding.lng})
    });
 };

function setMarker(marker) {
  const googleMarker = new google.maps.Marker({
   position: marker,
    map: needyMap
  });
  googleMarkers.push(googleMarker);
 };

  function getCurrentLocation() {
    navigator.geolocation.getCurrentPosition((position) =>{
      const pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      }

      needyMap = new google.maps.Map(document.getElementById('needyMap'), {
      zoom: 13,
      center: pos
     })
    })
  }


  function codeAddress() {
    var address = document.getElementById('address').value;
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == 'OK') {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location
        });
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }

function setFilterNeedType(radio){
  filter = radio.value;
  showMarkers();
}

function clearMarkers() {
  googleMarkers.forEach((googleMarker) =>{
    googleMarker.setMap(null);
  })
}

setTimeout(()=> {
  showMarkers();
},1000)

</script>